apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlinx-serialization'

if (file("google-services.json").exists() && file("src/debug/google-services.json").exists()) {
    logger.lifecycle("Firebase Enabled")
    apply plugin: 'com.google.gms.google-services'
    apply plugin: 'io.fabric'
    apply plugin: 'com.google.firebase.firebase-perf'
} else {
    logger.lifecycle("Firebase Disabled")
}

android {
    compileSdkVersion 29
    defaultConfig {
        applicationId "xyz.quaver.pupil"
        minSdkVersion 16
        targetSdkVersion 29
        versionCode 44
        versionName "4.8"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
    }
    buildTypes {
        debug {
            debuggable true
            applicationIdSuffix ".debug"
            versionNameSuffix "-DEBUG"

            buildConfigField('Boolean', 'CENSOR', 'false')
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled true
            shrinkResources true

            buildConfigField('Boolean', 'CENSOR', 'false')
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    kotlinOptions {
        freeCompilerArgs += '-Xuse-experimental=kotlin.Experimental'
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildToolsVersion = '29.0.2'
}

dependencies {
    def markwonVersion = "3.0.1"

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.3'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.3'
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime:0.14.0"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.preference:preference:1.1.0'
    implementation 'androidx.gridlayout:gridlayout:1.0.0'
    implementation "androidx.biometric:biometric:1.0.1"
    implementation 'com.android.support:multidex:1.0.3'
    implementation "com.daimajia.swipelayout:library:1.2.0@aar"
    implementation 'com.google.android.material:material:1.2.0-alpha05'
    implementation 'com.google.firebase:firebase-core:17.2.2'
    implementation 'com.google.firebase:firebase-perf:19.0.5'
    implementation 'com.crashlytics.sdk.android:crashlytics:2.10.1'
    implementation 'com.github.arimorty:floatingsearchview:2.1.1'
    implementation 'com.github.clans:fab:1.6.4'

    implementation 'com.github.bumptech.glide:glide:4.11.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'
    kapt 'com.github.bumptech.glide:compiler:4.11.0'
    implementation ("com.github.bumptech.glide:recyclerview-integration:4.11.0") {
        transitive = false
    }

    implementation 'net.rdrei.android.dirchooser:library:3.2@aar'
    implementation 'com.github.chrisbanes:PhotoView:2.3.0'
    implementation 'com.andrognito.patternlockview:patternlockview:1.0.0'
    implementation "ru.noties.markwon:core:${markwonVersion}"
    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test:rules:1.2.0'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation project(path: ':libpupil')
}

androidExtensions {
    experimental = true
}
